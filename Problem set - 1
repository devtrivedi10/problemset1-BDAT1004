Problem Set – 1

Question 1

1-int
2-float
3-true-bool
4-int
5-int
6-int
7-float
8-int
9-false-bool
10-float



Question 2 (a)

using System;
using System.Collections;

namespace Demo {
    
   class Program {
       
      static void Main(string[] args) {
          
         string str = "Dev";
         
         Console.WriteLine("String: "+str);
         Console.WriteLine("String Length: "+str.Length);
         Console.ReadKey();
      }
   }
}

Output of Question 2(a)
   
 


Question 2(b)

using System;

public class Demo {
   public static void Main() {
      string str1 = "Supercalifragilisticexpialidocious", str2 = "ice";
      bool res;

      res = str1.Contains(str2);
      if (res)
         Console.Write("The substring " + str2 + " is in the string " + str1);
      else
         Console.Write("The substring " + str2 + " is not in the string " + str1);
   }
}






Output of Question 2(b)

 

Question – 2 (c)
using System;
using System.Linq;

class Demo {
   static void Main() {
      string[] arr = { "Supercalifragilisticexpialidocious","Honorificabilitudinitatibus","Bababadalgharaghtakamminarronnkonn"};
      string res = arr.AsQueryable().Aggregate("jQuery", (longest, next) => next.Length > longest.Length ? next : longest,str => str.ToLower());    
      Console.WriteLine("Longest String is: {0}", res);
   }
}






Output of Question 2 (c)

 

Question 2 (d)
using System;//Visual Studio syntax
using System.Collections.Generic;

public class mySortedSet
{
    public static void Main(string[] args)
    {
        var names = new SortedSet<string>();
        names.Add("Berlioz'");
        names.Add("Borodin");
        names.Add("Brian");
        names.Add("Bartok");
        names.Add("Bellini");
        names.Add("Buxtehude");
        names.Add("Bernstein");
        foreach (var name in names)
        {
            Console.WriteLine(name);
        }
    }}
Output of Question – 2(d)

 


Question – 3
using System;

class Test
{

// Function to find area
static float findArea(int a, int b,
int c)
{
float s = (a + b + c) / 2;
return (float)Math.Sqrt(s * (s - a) *
(s - b) * (s - c));
}

public static void Main()
{
int a = 2;
int b = 2;
int c = 2;
Console.Write("Area is " + findArea(a, b, c)); }}
Output of Question – 3

  

Question – 4
using System;
namespace Demo
{
    public class Program
    {
        public static void Main(string[] args)
        {
            int[] arr1 = new int[] {25,47,42,56,32};
            int[] arr2 = new int[5];
            int[] arr3 = new int[5];
            int i, j = 0, k = 0;
            for (i = 0; i < 5; i++)
            {
                if (arr1[i] % 2 == 0)
                {
                    arr2[j] = arr1[i];
                    j++;
                }
                else
                {
                    arr3[k] = arr1[i];
                    k++;
                }
            }
            Console.WriteLine("Even Elements are: ");
            for (i = 0; i < j; i++)
            {
                Console.WriteLine(arr2[i]);
            }
            Console.WriteLine("Odd Elements are: ");
            for (i = 0; i < k; i++)
            {
                Console.WriteLine(arr3[i]);
            }
        }
    }
}

Output of Question – 4 
 

Question – 5(a)
using System;

class GFG
{

    // function to find if given
    // point lies inside a given
    // rectangle or not.
    static bool FindPoint(int x1, int y1, int x2,
                          int y2, int x, int y)
    {
        if (x > x1 && x < x2 &&
            y > y1 && y < y2)
            return true;

        return false;
    }

    // Driver code
    public static void Main()
    {

        // bottom-left and top-right
        // corners of rectangle
        int x1 = 0, y1 = 0,
            x2 = 2, y2 = 3;
        
        // given point
        int x = 1, y = 1;

        // function call
        if (FindPoint(x1, y1, x2, y2, x, y))
            Console.Write("Yes");
        else
            Console.Write("No");
    }
}
Output of Question – 5(a)
 